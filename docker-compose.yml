version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: eav-demo-app
    container_name: eav-demo-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./storage:/var/www/html/storage
    networks:
      - eav-network
    depends_on:
      - mysql
      - redis

  nginx:
    image: nginx:alpine
    container_name: eav-demo-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - eav-network
    depends_on:
      - app

  mysql:
    image: mysql:8.0
    container_name: eav-demo-mysql
    restart: unless-stopped
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: eav_demo
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_PASSWORD: password
      MYSQL_USER: eav_user
    volumes:
      - mysql-data:/var/lib/mysql
      - ./eav2.sql:/docker-entrypoint-initdb.d/eav2.sql
    networks:
      - eav-network

  redis:
    image: redis:alpine
    container_name: eav-demo-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - eav-network

  node:
    image: node:20-alpine
    container_name: eav-demo-node
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    networks:
      - eav-network
    command: npm run dev
    depends_on:
      - app

networks:
  eav-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local

